Metadata-Version: 2.1
Name: medical_vision
Version: 0.1.0
Summary: A medical imaging model for classification and segmentation
Home-page: https://github.com/yourusername/medical_vision
Author: Your Name
Author-email: your.email@example.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: torch>=2.0.0
Requires-Dist: torchvision>=0.15.0
Requires-Dist: timm>=0.9.0
Requires-Dist: numpy>=1.21.0
Requires-Dist: scikit-learn>=1.0.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: tqdm>=4.65.0
Requires-Dist: wandb>=0.15.0
Requires-Dist: matplotlib>=3.5.0
Requires-Dist: albumentations>=1.3.0

# Medical Vision Dataset

## Dataset Structure
The dataset is organized into three main directories:

### Raw Data
Contains the original, unmodified data:
- `raw/images/`: Original DICOM files
- `raw/masks/`: Original segmentation masks
- `raw/labels.csv`: Original classification labels

### Processed Data
Contains preprocessed data split into train/val/test sets:
```
processed/
â”œâ”€â”€ train/ (70% of data)
â”œâ”€â”€ val/   (15% of data)
â””â”€â”€ test/  (15% of data)
```

Each split contains:
- `images/`: DICOM files
- `masks/`: Segmentation masks in PNG format
- `metadata.csv`: Combined labels and metadata

## Metadata Format
The `metadata.csv` file contains:
```csv
image_id,path,mask_path,label_1,label_2,...,label_14
patient1,images/patient1.dcm,masks/patient1_mask.png,0,1,0,...,1
```

## Data Preprocessing
To preprocess the raw data and create the train/val/test splits:
```bash
python scripts/prepare_data.py --raw_dir data/raw --processed_dir data/processed
```



## Data Statistics
- Total images: X
- Training set: X images
- Validation set: X images
- Test set: X images
- Image size: 224x224
- Number of classes: 14
